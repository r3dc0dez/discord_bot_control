<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Servers - Discord Bot Control Panel</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/style.css">
    <style>
        .modal-overlay {
            transition: opacity 0.3s ease-in-out;
            opacity: 0;
        }
        .modal-overlay.show {
            opacity: 1;
        }
        .modal-content {
            transition: all 0.3s ease-in-out;
            transform: scale(0.9);
            opacity: 0;
        }
        .modal-content.show {
            transform: scale(1);
            opacity: 1;
        }
        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            25% { transform: translateX(-5px); }
            75% { transform: translateX(5px); }
        }
        .shake {
            animation: shake 0.5s ease-in-out;
        }
    </style>
</head>
<body class="bg-gray-900 text-white">
    <div class="min-h-screen">
        <!-- Navigation -->
        <nav class="bg-gray-800 border-b border-gray-700">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex items-center justify-between h-16">
                    <div class="flex items-center">
                        <div class="flex-shrink-0">
                            <h1 class="text-xl font-bold">Discord Bot Control</h1>
                        </div>
                        <div class="hidden md:block">
                            <div class="ml-10 flex items-baseline space-x-4">
                                <a href="/" class="text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium">Dashboard</a>
                                <a href="/servers" class="bg-gray-900 text-white px-3 py-2 rounded-md text-sm font-medium">Servers</a>
                                <a href="/messages" class="text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium">Messages</a>
                                <a href="/settings" class="text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium">Settings</a>
                            </div>
                        </div>
                    </div>
                    <div class="flex items-center">
                        <div class="text-gray-300 flex items-center">
                            <% if (bot.avatar) { %>
                                <img src="https://cdn.discordapp.com/avatars/<%= bot.id %>/<%= bot.avatar %>.png" alt="Bot Avatar" class="w-8 h-8 rounded-full mr-2">
                            <% } %>
                            <span class="text-sm font-medium"><%= bot.tag %></span>
                        </div>
                    </div>
                </div>
            </div>
        </nav>

        <!-- Feature Not Available Modal -->
        <div id="featureModal" class="modal-overlay hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
            <div class="modal-content bg-gray-800 p-6 rounded-lg w-96 relative">
                <div class="text-center mb-6">
                    <div class="text-red-500 text-5xl mb-4">⚠️</div>
                    <h3 class="text-xl font-bold text-white mb-2">Feature Not Available</h3>
                    <p class="text-gray-300">This feature hasn't been added yet.</p>
                </div>
                <div class="flex justify-center">
                    <button onclick="closeFeatureModal()" 
                            class="bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded-md transition-colors duration-200">
                        Got it!
                    </button>
                </div>
            </div>
        </div>

        <!-- Main Content -->
        <main class="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
            <div class="px-4 py-6 sm:px-0">
                <div class="flex justify-between items-center mb-6">
                    <h2 class="text-2xl font-bold">Server Management</h2>
                    <button onclick="generateInvite()" 
                            class="bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-md">
                        Add Bot to Server
                    </button>
                </div>
                <div class="grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3">
                    <% guilds.forEach(guild => { %>
                        <div class="bg-gray-800 rounded-lg shadow p-6">
                            <div class="flex items-center justify-between mb-4">
                                <h3 class="text-lg font-medium text-white"><%= guild.name %></h3>
                                <% if (guild.icon) { %>
                                    <img src="<%= guild.icon %>" alt="<%= guild.name %>" class="w-12 h-12 rounded-full">
                                <% } %>
                            </div>
                            <div class="text-sm text-gray-400 mb-4">
                                Members: <%= guild.memberCount %>
                            </div>
                            <div class="flex space-x-2">
                                <button onclick="createInvite('<%= guild.id %>')" 
                                    class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md text-sm">
                                    Create Invite
                                </button>
                                <button onclick="leaveServer('<%= guild.id %>')"
                                    class="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-md text-sm">
                                    Leave Server
                                </button>
                                <a href="/server/<%= guild.id %>" 
                                    class="bg-gray-700 hover:bg-gray-600 text-white px-4 py-2 rounded-md text-sm">
                                    View
                                </a>
                            </div>
                        </div>
                    <% }); %>
                </div>
            </div>
        </main>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();

        function showFeatureModal() {
            const modal = document.getElementById('featureModal');
            const modalContent = modal.querySelector('.modal-content');
            
            modal.classList.remove('hidden');
            // Trigger reflow
            void modal.offsetWidth;
            
            modal.classList.add('show');
            modalContent.classList.add('show');
        }

        function closeFeatureModal() {
            const modal = document.getElementById('featureModal');
            const modalContent = modal.querySelector('.modal-content');
            
            modal.classList.remove('show');
            modalContent.classList.remove('show');
            
            // Add shake animation
            modalContent.classList.add('shake');
            
            // Wait for animations to finish before hiding
            setTimeout(() => {
                modal.classList.add('hidden');
                modalContent.classList.remove('shake');
            }, 300);
        }

        function generateInvite() {
            showFeatureModal();
        }

        function createInvite(serverId) {
            socket.emit('create-invite', { serverId });
        }

        function leaveServer(serverId) {
            if (confirm('Are you sure you want to leave this server?')) {
                socket.emit('leave-server', { serverId });
            }
        }

        socket.on('invite-created', (data) => {
            if (data.success) {
                alert(`Invite Link: ${data.invite}\nCopied to clipboard!`);
                navigator.clipboard.writeText(data.invite);
            } else {
                alert('Error creating invite: ' + data.error);
            }
        });

        socket.on('server-left', (data) => {
            if (data.success) {
                alert('Successfully left the server');
                location.reload();
            } else {
                alert('Error leaving server: ' + data.error);
            }
        });

        socket.on('guild-update', (guild) => {
            // Handle real-time guild updates
            location.reload();
        });
    </script>
</body>
</html>
